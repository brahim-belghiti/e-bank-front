/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PasswordImport } from './routes/password'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedCustomerImport } from './routes/_authenticated/_customer'
import { Route as AuthenticatedAgentImport } from './routes/_authenticated/_agent'
import { Route as AuthenticatedCustomerDashboardImport } from './routes/_authenticated/_customer/dashboard'
import { Route as AuthenticatedCustomerTransactionsAddImport } from './routes/_authenticated/_customer/transactions/add'
import { Route as AuthenticatedAgentAgentDashboardImport } from './routes/_authenticated/_agent/agent/dashboard'
import { Route as AuthenticatedAgentAgentCustomersAddImport } from './routes/_authenticated/_agent/agent/customers/add'
import { Route as AuthenticatedAgentAgentAccountsAddImport } from './routes/_authenticated/_agent/agent/accounts/add'
import { Route as AuthenticatedAgentAgentCustomersIdEditImport } from './routes/_authenticated/_agent/agent/customers/$id/edit'
import { Route as AuthenticatedAgentAgentAccountsIdEditImport } from './routes/_authenticated/_agent/agent/accounts/$id/edit'

// Create/Update Routes

const PasswordRoute = PasswordImport.update({
  path: '/password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedCustomerRoute = AuthenticatedCustomerImport.update({
  id: '/_customer',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAgentRoute = AuthenticatedAgentImport.update({
  id: '/_agent',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedCustomerDashboardRoute =
  AuthenticatedCustomerDashboardImport.update({
    path: '/dashboard',
    getParentRoute: () => AuthenticatedCustomerRoute,
  } as any)

const AuthenticatedCustomerTransactionsAddRoute =
  AuthenticatedCustomerTransactionsAddImport.update({
    path: '/transactions/add',
    getParentRoute: () => AuthenticatedCustomerRoute,
  } as any)

const AuthenticatedAgentAgentDashboardRoute =
  AuthenticatedAgentAgentDashboardImport.update({
    path: '/agent/dashboard',
    getParentRoute: () => AuthenticatedAgentRoute,
  } as any)

const AuthenticatedAgentAgentCustomersAddRoute =
  AuthenticatedAgentAgentCustomersAddImport.update({
    path: '/agent/customers/add',
    getParentRoute: () => AuthenticatedAgentRoute,
  } as any)

const AuthenticatedAgentAgentAccountsAddRoute =
  AuthenticatedAgentAgentAccountsAddImport.update({
    path: '/agent/accounts/add',
    getParentRoute: () => AuthenticatedAgentRoute,
  } as any)

const AuthenticatedAgentAgentCustomersIdEditRoute =
  AuthenticatedAgentAgentCustomersIdEditImport.update({
    path: '/agent/customers/$id/edit',
    getParentRoute: () => AuthenticatedAgentRoute,
  } as any)

const AuthenticatedAgentAgentAccountsIdEditRoute =
  AuthenticatedAgentAgentAccountsIdEditImport.update({
    path: '/agent/accounts/$id/edit',
    getParentRoute: () => AuthenticatedAgentRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/password': {
      id: '/password'
      path: '/password'
      fullPath: '/password'
      preLoaderRoute: typeof PasswordImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_agent': {
      id: '/_authenticated/_agent'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedAgentImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_customer': {
      id: '/_authenticated/_customer'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedCustomerImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_customer/dashboard': {
      id: '/_authenticated/_customer/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedCustomerDashboardImport
      parentRoute: typeof AuthenticatedCustomerImport
    }
    '/_authenticated/_agent/agent/dashboard': {
      id: '/_authenticated/_agent/agent/dashboard'
      path: '/agent/dashboard'
      fullPath: '/agent/dashboard'
      preLoaderRoute: typeof AuthenticatedAgentAgentDashboardImport
      parentRoute: typeof AuthenticatedAgentImport
    }
    '/_authenticated/_customer/transactions/add': {
      id: '/_authenticated/_customer/transactions/add'
      path: '/transactions/add'
      fullPath: '/transactions/add'
      preLoaderRoute: typeof AuthenticatedCustomerTransactionsAddImport
      parentRoute: typeof AuthenticatedCustomerImport
    }
    '/_authenticated/_agent/agent/accounts/add': {
      id: '/_authenticated/_agent/agent/accounts/add'
      path: '/agent/accounts/add'
      fullPath: '/agent/accounts/add'
      preLoaderRoute: typeof AuthenticatedAgentAgentAccountsAddImport
      parentRoute: typeof AuthenticatedAgentImport
    }
    '/_authenticated/_agent/agent/customers/add': {
      id: '/_authenticated/_agent/agent/customers/add'
      path: '/agent/customers/add'
      fullPath: '/agent/customers/add'
      preLoaderRoute: typeof AuthenticatedAgentAgentCustomersAddImport
      parentRoute: typeof AuthenticatedAgentImport
    }
    '/_authenticated/_agent/agent/accounts/$id/edit': {
      id: '/_authenticated/_agent/agent/accounts/$id/edit'
      path: '/agent/accounts/$id/edit'
      fullPath: '/agent/accounts/$id/edit'
      preLoaderRoute: typeof AuthenticatedAgentAgentAccountsIdEditImport
      parentRoute: typeof AuthenticatedAgentImport
    }
    '/_authenticated/_agent/agent/customers/$id/edit': {
      id: '/_authenticated/_agent/agent/customers/$id/edit'
      path: '/agent/customers/$id/edit'
      fullPath: '/agent/customers/$id/edit'
      preLoaderRoute: typeof AuthenticatedAgentAgentCustomersIdEditImport
      parentRoute: typeof AuthenticatedAgentImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedAgentRoute: AuthenticatedAgentRoute.addChildren({
      AuthenticatedAgentAgentDashboardRoute,
      AuthenticatedAgentAgentAccountsAddRoute,
      AuthenticatedAgentAgentCustomersAddRoute,
      AuthenticatedAgentAgentAccountsIdEditRoute,
      AuthenticatedAgentAgentCustomersIdEditRoute,
    }),
    AuthenticatedCustomerRoute: AuthenticatedCustomerRoute.addChildren({
      AuthenticatedCustomerDashboardRoute,
      AuthenticatedCustomerTransactionsAddRoute,
    }),
  }),
  PasswordRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/password"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_agent",
        "/_authenticated/_customer"
      ]
    },
    "/password": {
      "filePath": "password.tsx"
    },
    "/_authenticated/_agent": {
      "filePath": "_authenticated/_agent.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_agent/agent/dashboard",
        "/_authenticated/_agent/agent/accounts/add",
        "/_authenticated/_agent/agent/customers/add",
        "/_authenticated/_agent/agent/accounts/$id/edit",
        "/_authenticated/_agent/agent/customers/$id/edit"
      ]
    },
    "/_authenticated/_customer": {
      "filePath": "_authenticated/_customer.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_customer/dashboard",
        "/_authenticated/_customer/transactions/add"
      ]
    },
    "/_authenticated/_customer/dashboard": {
      "filePath": "_authenticated/_customer/dashboard.tsx",
      "parent": "/_authenticated/_customer"
    },
    "/_authenticated/_agent/agent/dashboard": {
      "filePath": "_authenticated/_agent/agent/dashboard.tsx",
      "parent": "/_authenticated/_agent"
    },
    "/_authenticated/_customer/transactions/add": {
      "filePath": "_authenticated/_customer/transactions/add.tsx",
      "parent": "/_authenticated/_customer"
    },
    "/_authenticated/_agent/agent/accounts/add": {
      "filePath": "_authenticated/_agent/agent/accounts/add.tsx",
      "parent": "/_authenticated/_agent"
    },
    "/_authenticated/_agent/agent/customers/add": {
      "filePath": "_authenticated/_agent/agent/customers/add.tsx",
      "parent": "/_authenticated/_agent"
    },
    "/_authenticated/_agent/agent/accounts/$id/edit": {
      "filePath": "_authenticated/_agent/agent/accounts/$id/edit.tsx",
      "parent": "/_authenticated/_agent"
    },
    "/_authenticated/_agent/agent/customers/$id/edit": {
      "filePath": "_authenticated/_agent/agent/customers/$id/edit.tsx",
      "parent": "/_authenticated/_agent"
    }
  }
}
ROUTE_MANIFEST_END */
